(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var params = {};
var paramsTotal = {};
jumpPage(params);

function queryAllPostsTotal(paramsTotal) {
    var count = '';
    $.ajax({
        url: getUrl("Posts/queryAllPostsTotal.do"),
        type: "GET",
        dataType: "json",
        data: paramsTotal,
        async: false,
        success: function success(data) {
            if (data.code == 10000) {
                count = data.responseBody;
            } else {
                layer.ready(function () {
                    layer.msg(data.msg);
                });
            }
        }
    });
    return count;
}

function jumpPage(params) {
    layui.use('laypage', function () {
        var laypage = layui.laypage;
        laypage.render({
            elem: 'pagePosts',
            limit: 1,
            count: queryAllPostsTotal(paramsTotal),
            jump: function jump(obj) {
                params.number = obj.curr;
                params.size = obj.limit;
                $.ajax({
                    url: getUrl("Posts/queryAllPosts.do"),
                    type: "GET",
                    dataType: "json",
                    data: params,
                    async: true,
                    success: function success(data) {
                        if (data.code == 10000) {
                            if (data.responseBody.list.length > 0) {
                                $(".posts-none").hide();
                                var html = '';
                                data.responseBody.list.forEach(function (obj, index) {
                                    console.log(obj);
                                    html += "<li>\n                                        <a href=\"views/home.html\" class=\"fly-avatar\">\n                                            <img src=\"" + obj.userName + "\" alt=\"" + obj.userName + "\">\n                                        </a>\n                                        <h2>\n                                            <a href=\"detail.html\">" + obj.postTitle + "</a>\n                                        </h2>\n                                        <div class=\"fly-list-info\">\n                                            <a href=\"views/home.html\" link>\n                                                <cite>" + obj.userName + "</cite>\n                                                <i class=\"iconfont icon-renzheng\"></i>\n                                            </a>\n                                            <span>" + obj.postCreatetime + "</span>\n                                            <span class=\"fly-list-kiss layui-hide-xs\" title=\"\u60AC\u8D4F\u98DE\u543B\"><i class=\"iconfont icon-kiss\"></i>" + obj.postReward + "</span>\n                                            <span class=\"layui-badge fly-badge-accept layui-hide-xs\">" + obj.postIspay + "</span>\n                                            <span class=\"fly-list-nums\"><i class=\"iconfont icon-pinglun1\" title=\"\u56DE\u7B54\"></i> 66</span>\n                                        </div>\n                                        <div class=\"fly-list-badge\">\n                                            <span class=\"layui-badge layui-bg-black\">" + obj.postType + "</span>                            \n                                        </div>\n                                      </li>";
                                });
                                $("#postsData").html(html);
                            } else {
                                $(".posts-list").hide();
                            }
                        } else {
                            layer.ready(function () {
                                layer.msg(data.msg);
                            });
                        }
                    }
                });
            }
        });
    });
}

$(".postIspay").on("click", function () {
    if (!$(this).hasClass("layui-this")) {
        $(this).addClass("layui-this").siblings().removeClass("layui-this");
    }
    params.postIspay = $(this).attr("value");
    paramsTotal.postIspay = $(this).attr("value");
    queryAllPostsTotal(paramsTotal);
    jumpPage(params);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}],2:[function(require,module,exports){
'use strict';

var _article = require('./article');

var _article2 = _interopRequireDefault(_article);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** 重写ajax请求*/
(function ($) {
    //首先备份下jquery的ajax方法
    var _ajax = $.ajax;
    //重写jquery的ajax方法
    $.ajax = function (opt) {
        //备份opt中error和success方法
        var fn = {
            beforeSend: function beforeSend() {},
            error: function error(XMLHttpRequest, textStatus, errorThrown) {},
            success: function success(data, textStatus) {},
            complete: function complete() {}
        };
        if (opt.error) {
            fn.error = opt.error;
        }
        if (opt.success) {
            fn.success = opt.success;
        }
        if (opt.complete) {
            fn.complete = opt.complete;
        }
        if (opt.beforeSend) {
            fn.beforeSend = opt.beforeSend;
        }
        //扩展增强处理
        var _opt = $.extend(opt, {
            error: function error(XMLHttpRequest, textStatus, errorThrown) {
                //错误方法增强处理
                fn.error(XMLHttpRequest, textStatus, errorThrown);
            },
            success: function success(data, textStatus) {
                if (data.code == '10002') {

                    $alert({ content: '未登录,无法查询' });
                } else if (data.code == '10003') {
                    clearSessionStorage("token");

                    $alert({ content: '登陆凭证已过期,请使用带有登录凭证的url重新进入页面' });
                } else {
                    //成功回调方法增强处理
                    fn.success(data, textStatus);
                }
            },
            beforeSend: function beforeSend(XHR) {
                fn.beforeSend();
            },
            complete: function complete() {
                //请求完成后回调函数 (请求成功或失败之后均调用)。
                fn.complete();
            },
            headers: {
                token: getSessionStorage('token') || ''
            }
        });
        return _ajax(_opt);
    };
})(jQuery);

//定义layui
var layer = '';
layui.use('layer', function () {
    layer = layui.layer;
});
window.hasValue = $utils.common.hasValue;
window.getQueryString = $utils.route.getUrlString;
window.getLocalStorage = $utils.storage.getLocalStorage;
window.setLocalStorage = $utils.storage.setLocalStorage;
window.getSessionStorage = $utils.storage.getSessionStorage;
window.setSessionStorage = $utils.storage.setSessionStorage;
window.clearLocalStorage = $utils.storage.clearLocalStorage;
window.clearSessionStorage = $utils.storage.clearSessionStorage;
//路由跳转
window.hrefPage = function (html, label, title) {
    debugger;
    window.location.href = "index.html#" + label + "/" + html;
    $.get(html + ".html", function (html) {
        $('#' + label).html(html);
        document.title = title;
    });
};
window.getUrl = function (url) {
    return window.location.origin + '/' + url;
};

window.getUrlChange = function () {
    if (hasValue(location.hash)) {
        var label = location.hash.substring(1).split("/")[0];
        var html = location.hash.substring(1).split("/")[1];
        $.get(html + ".html", function (html) {
            $('#' + label).html(html);
        });
    }
};

window.queryAllPostsTotal = function (paramsTotal) {
    var count = '';
    $.ajax({
        url: getUrl("Posts/queryAllPostsTotal.do"),
        type: "GET",
        dataType: "json",
        data: paramsTotal,
        async: false,
        success: function success(data) {
            if (data.code == 10000) {
                count = data.responseBody;
            } else {
                layer.ready(function () {
                    layer.msg(data.msg);
                });
            }
        }
    });
    return count;
};

window.jumpPage = function (params) {
    layui.use('laypage', function () {
        var laypage = layui.laypage;
        laypage.render({
            elem: 'pagePosts',
            limit: 1,
            count: queryAllPostsTotal(paramsTotal),
            jump: function jump(obj) {
                params.number = obj.curr;
                params.size = obj.limit;
                $.ajax({
                    url: getUrl("Posts/queryAllPosts.do"),
                    type: "GET",
                    dataType: "json",
                    data: params,
                    async: true,
                    success: function success(data) {
                        if (data.code == 10000) {
                            if (data.responseBody.list.length > 0) {
                                $(".posts-none").hide();
                                var html = '';
                                data.responseBody.list.forEach(function (obj, index) {
                                    console.log(obj);
                                    html += '<li>\n                                        <a href="views/home.html" class="fly-avatar">\n                                            <img src="' + obj.userName + '" alt="' + obj.userName + '">\n                                        </a>\n                                        <h2>\n                                            <a href="detail.html">' + obj.postTitle + '</a>\n                                        </h2>\n                                        <div class="fly-list-info">\n                                            <a href="views/home.html" link>\n                                                <cite>' + obj.userName + '</cite>\n                                                <i class="iconfont icon-renzheng"></i>\n                                            </a>\n                                            <span>' + obj.postCreatetime + '</span>\n                                            <span class="fly-list-kiss layui-hide-xs" title="\u60AC\u8D4F\u98DE\u543B"><i class="iconfont icon-kiss"></i>' + obj.postReward + '</span>\n                                            <span class="layui-badge fly-badge-accept layui-hide-xs">' + obj.postIspay + '</span>\n                                            <span class="fly-list-nums"><i class="iconfont icon-pinglun1" title="\u56DE\u7B54"></i> 66</span>\n                                        </div>\n                                        <div class="fly-list-badge">\n                                            <span class="layui-badge layui-bg-black">' + obj.postType + '</span>                            \n                                        </div>\n                                      </li>';
                                });
                                $("#postsData").html(html);
                            } else {
                                $(".posts-list").hide();
                            }
                        } else {
                            layer.ready(function () {
                                layer.msg(data.msg);
                            });
                        }
                    }
                });
            }
        });
    });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./article":1}]},{},[2])
//# sourceMappingURL=../maps/commFn.min.js.map
